"""
Audit log entry for security and compliance tracking
"""
type AuditLog {
  """
  Action performed (login, logout, register, etc)
  """
  action: String!

  """
  When the action occurred
  """
  createdAt: DateTime!

  """
  Reason for failure if applicable
  """
  failureReason: String

  """
  Unique identifier for the audit log entry
  """
  id: ID!

  """
  IP address from which the action originated
  """
  ipAddress: String

  """
  Additional metadata including IP, user agent, etc
  """
  metadata: Json

  """
  Previous values before update
  """
  previousValues: Json

  """
  Unique request identifier
  """
  requestId: String

  """
  Resource type (User, Token, etc)
  """
  resource: String!

  """
  ID of the affected resource
  """
  resourceId: String

  """
  Result of the action (success, failure, blocked)
  """
  result: String!

  """
  User who performed the action
  """
  user: User

  """
  User agent string from the request
  """
  userAgent: String
}

"""
The connection type for AuditLog.
"""
type AuditLogConnection {
  """
  A list of edges.
  """
  edges: [AuditLogEdge]

  """
  A list of nodes.
  """
  nodes: [AuditLog]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AuditLogEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AuditLog
}

"""
Autogenerated return type of ChangePassword.
"""
type ChangePasswordPayload {
  """
  List of validation errors
  """
  errors: [String!]!

  """
  Updated user object
  """
  user: User
}

"""
Represents a datetime value in ISO 8601 format
"""
scalar DateTime

"""
Autogenerated return type of DeleteUser.
"""
type DeleteUserPayload {
  """
  Any error messages
  """
  errors: [String!]

  """
  Confirmation message
  """
  message: String!

  """
  Whether the deletion was successful
  """
  success: Boolean!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
Represents JSON data as a hash or array
"""
scalar Json

"""
Autogenerated input type of LoginUser
"""
input LoginUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  User's email address
  """
  email: String!

  """
  User's password
  """
  password: String!
}

"""
Autogenerated return type of LoginUser.
"""
type LoginUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  List of authentication errors
  """
  errors: [String!]!

  """
  JWT authentication token
  """
  token: String

  """
  Authenticated user object
  """
  user: User
}

"""
Autogenerated input type of LogoutAllDevices
"""
input LogoutAllDevicesInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Current password for verification
  """
  password: String!
}

"""
Autogenerated return type of LogoutAllDevices.
"""
type LogoutAllDevicesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  message: String
  success: Boolean!
}

"""
Autogenerated input type of LogoutUser
"""
input LogoutUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of LogoutUser.
"""
type LogoutUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  message: String
  success: Boolean!
}

"""
Ponto de entrada para todas as mutações (alterações de dados) no sistema Guardian Auth
"""
type Mutation {
  """
  Altera a senha do usuário autenticado
  """
  changePassword(
    """
    User's current password
    """
    currentPassword: String!

    """
    User's new password (minimum 8 characters)
    """
    newPassword: String!
  ): ChangePasswordPayload

  """
  Remove um usuário do sistema (apenas administradores)
  """
  deleteUser(
    """
    ID of the user to delete
    """
    id: ID!
  ): DeleteUserPayload

  """
  Autentica um usuário e retorna token JWT
  """
  loginUser(
    """
    Parameters for LoginUser
    """
    input: LoginUserInput!
  ): LoginUserPayload

  """
  Desconecta o usuário de todos os dispositivos
  """
  logoutAllDevices(
    """
    Parameters for LogoutAllDevices
    """
    input: LogoutAllDevicesInput!
  ): LogoutAllDevicesPayload

  """
  Desconecta o usuário atual e invalida o token
  """
  logoutUser(
    """
    Parameters for LogoutUser
    """
    input: LogoutUserInput!
  ): LogoutUserPayload

  """
  Renova um token JWT válido antes de expirar
  """
  refreshToken(
    """
    Current JWT token (can be expired)
    """
    token: String!
  ): RefreshTokenPayload

  """
  Registra um novo usuário no sistema
  """
  registerUser(
    """
    Parameters for RegisterUser
    """
    input: RegisterUserInput!
  ): RegisterUserPayload

  """
  Atualiza o perfil do usuário autenticado
  """
  updateMyProfile(
    """
    Parameters for UpdateMyProfile
    """
    input: UpdateMyProfileInput!
  ): UpdateMyProfilePayload

  """
  Atualiza dados de um usuário específico (apenas administradores)
  """
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload

  """
  Atualiza dados de um usuário pelo email (apenas administradores)
  """
  updateUserByEmail(
    """
    Parameters for UpdateUserByEmail
    """
    input: UpdateUserByEmailInput!
  ): UpdateUserByEmailPayload

  """
  Atualiza o papel/função de um usuário (apenas administradores)
  """
  updateUserRole(
    """
    List of role names to assign
    """
    roleNames: [String!]!

    """
    ID of the user to update
    """
    userId: ID!
  ): UpdateUserRolePayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
Ponto de entrada para todas as consultas no sistema Guardian Auth
"""
type Query {
  """
  Consulta logs de auditoria para monitoramento de segurança (apenas administradores)
  """
  auditLogs(
    """
    Filter by specific action
    """
    action: String

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    End date for filtering
    """
    endDate: ISO8601Date

    """
    Filter by failure reason
    """
    failureReason: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Filter by IP address
    """
    ipAddress: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter logs from last N hours
    """
    recentHours: Int

    """
    Filter by resource type
    """
    resource: String

    """
    Filter by result (success, failure, blocked)
    """
    result: String

    """
    Start date for filtering
    """
    startDate: ISO8601Date

    """
    Filter by specific user ID
    """
    userId: ID
  ): AuditLogConnection!

  """
  Obtém informações do usuário logado através do token JWT no header Authorization
  """
  currentUser: User

  """
  Campo de teste para verificar conectividade da API
  """
  testField: String! @deprecated(reason: "Este campo será removido em versões futuras. Use health checks específicos.")

  """
  Busca um usuário específico pelo ID (apenas administradores)
  """
  user(
    """
    O ID do usuário a ser buscado
    """
    id: ID!
  ): User

  """
  Lista todos os usuários com filtros e paginação (apenas administradores)
  """
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Show users created after this date
    """
    createdAfter: ISO8601Date

    """
    Show users created before this date
    """
    createdBefore: ISO8601Date

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter by user role
    """
    role: UserRoleEnum

    """
    Search by name or email
    """
    search: String
  ): UserConnection!
}

"""
Autogenerated return type of RefreshToken.
"""
type RefreshTokenPayload {
  """
  List of refresh errors
  """
  errors: [String!]!

  """
  New JWT authentication token
  """
  token: String

  """
  Current user object
  """
  user: User
}

"""
Autogenerated input type of RegisterUser
"""
input RegisterUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  User's email address
  """
  email: String!

  """
  User's first name
  """
  firstName: String!

  """
  User's last name
  """
  lastName: String!

  """
  User's password (minimum 6 characters)
  """
  password: String!
}

"""
Autogenerated return type of RegisterUser.
"""
type RegisterUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  List of validation errors
  """
  errors: [String!]!

  """
  JWT authentication token
  """
  token: String

  """
  Created user object
  """
  user: User
}

"""
Autogenerated input type of UpdateMyProfile
"""
input UpdateMyProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  User fields to update
  """
  input: UserInput!
}

"""
Autogenerated return type of UpdateMyProfile.
"""
type UpdateMyProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated input type of UpdateUserByEmail
"""
input UpdateUserByEmailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Email of user to update
  """
  email: String!

  """
  User fields to update
  """
  input: UserInput!
}

"""
Autogenerated return type of UpdateUserByEmail.
"""
type UpdateUserByEmailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  ID of user to update
  """
  id: ID!

  """
  User fields to update
  """
  input: UserInput!
}

"""
Autogenerated return type of UpdateUser.
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated return type of UpdateUserRole.
"""
type UpdateUserRolePayload {
  """
  Any error messages
  """
  errors: [String!]

  """
  Result message
  """
  message: String!

  """
  Whether the operation was successful
  """
  success: Boolean!

  """
  Updated user
  """
  user: User
}

"""
Representa um usuário do sistema Guardian Auth
"""
type User {
  """
  Data e hora de criação da conta
  """
  createdAt: ISO8601DateTime!

  """
  Nome de exibição do usuário (nome completo se disponível, senão email)
  """
  displayName: String!

  """
  Endereço de email do usuário (único no sistema)
  """
  email: String!

  """
  Primeiro nome do usuário
  """
  firstName: String

  """
  Nome completo do usuário (primeiro nome + sobrenome)
  """
  fullName: String

  """
  Identificador único do usuário
  """
  id: ID!

  """
  Data e hora do último login do usuário
  """
  lastLoginAt: ISO8601DateTime

  """
  Sobrenome do usuário
  """
  lastName: String

  """
  Papel/função do usuário no sistema (admin, user, etc.)
  """
  role: String

  """
  Data e hora da última atualização dos dados do usuário
  """
  updatedAt: ISO8601DateTime!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]

  """
  A list of nodes.
  """
  nodes: [User]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

"""
Entrada de dados para atualização de informações do usuário
"""
input UserInput {
  """
  Endereço de email do usuário (deve ser único no sistema)
  """
  email: String

  """
  Primeiro nome do usuário
  """
  firstName: String

  """
  Sobrenome do usuário
  """
  lastName: String

  """
  Papel/função do usuário no sistema (apenas administradores podem alterar)
  """
  role: String
}

"""
User role types
"""
enum UserRoleEnum {
  """
  Administrator
  """
  ADMIN

  """
  Regular user
  """
  USER
}
